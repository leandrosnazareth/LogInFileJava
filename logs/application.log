{"@timestamp":"2023-11-25T11:00:30.435-03:00","@version":"1","message":"Starting LogInFileJavaApplication using Java 17.0.9 with PID 8695 (/Users/leandronazareth/Documents/PROJECT/LogInFileJava/target/classes started by leandronazareth in /Users/leandronazareth/Documents/PROJECT/LogInFileJava)","logger_name":"br.com.leandronazareth.LogInFileJava.LogInFileJavaApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2023-11-25T11:00:30.439-03:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"br.com.leandronazareth.LogInFileJava.LogInFileJavaApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2023-11-25T11:00:30.827-03:00","@version":"1","message":"Started LogInFileJavaApplication in 0.505 seconds (process running for 0.753)","logger_name":"br.com.leandronazareth.LogInFileJava.LogInFileJavaApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2023-11-25T11:00:30.830-03:00","@version":"1","message":"Método AppRunner.run(..) está prestes a ser executado. Parâmetros: [[Ljava.lang.String;@5ff90645]","logger_name":"br.com.leandronazareth.LogInFileJava.log.LoggingAspect","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2023-11-25T11:00:30.830-03:00","@version":"1","message":"Método SquareRootCalculator.calculateSquareRoot(..) está prestes a ser executado. Parâmetros: [25.0]","logger_name":"br.com.leandronazareth.LogInFileJava.log.LoggingAspect","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2023-11-25T11:00:30.830-03:00","@version":"1","message":"Método SquareRootCalculator.calculateSquareRoot(..) retornou: 5.0","logger_name":"br.com.leandronazareth.LogInFileJava.log.LoggingAspect","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2023-11-25T11:00:30.830-03:00","@version":"1","message":"Resultado: 5.0","logger_name":"br.com.leandronazareth.LogInFileJava.AppRunner","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2023-11-25T11:00:30.831-03:00","@version":"1","message":"Método SquareRootCalculator.calculateSquareRoot(..) está prestes a ser executado. Parâmetros: [-1.0]","logger_name":"br.com.leandronazareth.LogInFileJava.log.LoggingAspect","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2023-11-25T11:00:30.831-03:00","@version":"1","message":"Método SquareRootCalculator.calculateSquareRoot(..) lançou uma exceção: Não é possível calcular a raiz quadrada de um número negativo.","logger_name":"br.com.leandronazareth.LogInFileJava.log.LoggingAspect","thread_name":"main","level":"ERROR","level_value":40000,"stack_trace":"java.lang.IllegalArgumentException: Não é possível calcular a raiz quadrada de um número negativo.\n\tat br.com.leandronazareth.LogInFileJava.service.SquareRootCalculator.calculateSquareRoot(SquareRootCalculator.java:10)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)\n\tat org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)\n\tat org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:57)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)\n\tat org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)\n\tat org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)\n\tat br.com.leandronazareth.LogInFileJava.service.SquareRootCalculator$$SpringCGLIB$$0.calculateSquareRoot(<generated>)\n\tat br.com.leandronazareth.LogInFileJava.AppRunner.run(AppRunner.java:26)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)\n\tat org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)\n\tat org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:57)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)\n\tat org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)\n\tat org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\n\tat org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)\n\tat br.com.leandronazareth.LogInFileJava.AppRunner$$SpringCGLIB$$0.run(<generated>)\n\tat org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:786)\n\tat org.springframework.boot.SpringApplication.lambda$callRunners$3(SpringApplication.java:770)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)\n\tat java.base/java.util.stream.SortedOps$SizedRefSortingSink.end(SortedOps.java:357)\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:510)\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\n\tat org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:765)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:330)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1342)\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1331)\n\tat br.com.leandronazareth.LogInFileJava.LogInFileJavaApplication.main(LogInFileJavaApplication.java:10)\n"}
{"@timestamp":"2023-11-25T11:00:30.832-03:00","@version":"1","message":"Exceção: Não é possível calcular a raiz quadrada de um número negativo.","logger_name":"br.com.leandronazareth.LogInFileJava.AppRunner","thread_name":"main","level":"ERROR","level_value":40000}
{"@timestamp":"2023-11-25T11:00:30.832-03:00","@version":"1","message":"Método AppRunner.run(..) retornou: null","logger_name":"br.com.leandronazareth.LogInFileJava.log.LoggingAspect","thread_name":"main","level":"INFO","level_value":20000}
2023-11-25 11:02:09 [main] INFO  b.c.l.L.LogInFileJavaApplication - Starting LogInFileJavaApplication using Java 17.0.9 with PID 8773 (/Users/leandronazareth/Documents/PROJECT/LogInFileJava/target/classes started by leandronazareth in /Users/leandronazareth/Documents/PROJECT/LogInFileJava)
2023-11-25 11:02:09 [main] INFO  b.c.l.L.LogInFileJavaApplication - No active profile set, falling back to 1 default profile: "default"
2023-11-25 11:02:09 [main] INFO  b.c.l.L.LogInFileJavaApplication - Started LogInFileJavaApplication in 0.494 seconds (process running for 0.7)
2023-11-25 11:02:09 [main] INFO  b.c.l.L.log.LoggingAspect - Método AppRunner.run(..) está prestes a ser executado. Parâmetros: [[Ljava.lang.String;@108531c2]
2023-11-25 11:02:09 [main] INFO  b.c.l.L.log.LoggingAspect - Método SquareRootCalculator.calculateSquareRoot(..) está prestes a ser executado. Parâmetros: [25.0]
2023-11-25 11:02:09 [main] INFO  b.c.l.L.log.LoggingAspect - Método SquareRootCalculator.calculateSquareRoot(..) retornou: 5.0
2023-11-25 11:02:09 [main] INFO  b.c.l.LogInFileJava.AppRunner - Resultado: 5.0
2023-11-25 11:02:09 [main] INFO  b.c.l.L.log.LoggingAspect - Método SquareRootCalculator.calculateSquareRoot(..) está prestes a ser executado. Parâmetros: [-1.0]
2023-11-25 11:02:09 [main] ERROR b.c.l.L.log.LoggingAspect - Método SquareRootCalculator.calculateSquareRoot(..) lançou uma exceção: Não é possível calcular a raiz quadrada de um número negativo.
java.lang.IllegalArgumentException: Não é possível calcular a raiz quadrada de um número negativo.
	at br.com.leandronazareth.LogInFileJava.service.SquareRootCalculator.calculateSquareRoot(SquareRootCalculator.java:10)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:57)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at br.com.leandronazareth.LogInFileJava.service.SquareRootCalculator$$SpringCGLIB$$0.calculateSquareRoot(<generated>)
	at br.com.leandronazareth.LogInFileJava.AppRunner.run(AppRunner.java:26)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:64)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:57)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:58)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at br.com.leandronazareth.LogInFileJava.AppRunner$$SpringCGLIB$$0.run(<generated>)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:786)
	at org.springframework.boot.SpringApplication.lambda$callRunners$3(SpringApplication.java:770)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.SortedOps$SizedRefSortingSink.end(SortedOps.java:357)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:510)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:765)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:330)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1342)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1331)
	at br.com.leandronazareth.LogInFileJava.LogInFileJavaApplication.main(LogInFileJavaApplication.java:10)
2023-11-25 11:02:09 [main] ERROR b.c.l.LogInFileJava.AppRunner - Exceção: Não é possível calcular a raiz quadrada de um número negativo.
2023-11-25 11:02:09 [main] INFO  b.c.l.L.log.LoggingAspect - Método AppRunner.run(..) retornou: null
2023-11-25 11:05:25 [main] INFO  b.c.l.L.LogInFileJavaApplication - Starting LogInFileJavaApplication using Java 17.0.9 with PID 8900 (/Users/leandronazareth/Documents/PROJECT/LogInFileJava/target/classes started by leandronazareth in /Users/leandronazareth/Documents/PROJECT/LogInFileJava)
2023-11-25 11:05:25 [main] INFO  b.c.l.L.LogInFileJavaApplication - No active profile set, falling back to 1 default profile: "default"
2023-11-25 11:05:25 [main] INFO  b.c.l.L.LogInFileJavaApplication - Started LogInFileJavaApplication in 0.489 seconds (process running for 0.691)
2023-11-25 11:05:25 [main] INFO  b.c.l.L.log.LoggingAspect - Método AppRunner.run(..) está prestes a ser executado. Parâmetros: [[Ljava.lang.String;@59429fac]
2023-11-25 11:05:25 [main] INFO  b.c.l.L.log.LoggingAspect - Método SquareRootCalculator.calculateSquareRoot(..) está prestes a ser executado. Parâmetros: [25.0]
2023-11-25 11:05:25 [main] INFO  b.c.l.L.log.LoggingAspect - Método SquareRootCalculator.calculateSquareRoot(..) retornou: 5.0
2023-11-25 11:05:25 [main] INFO  b.c.l.LogInFileJava.AppRunner - Resultado: 5.0
2023-11-25 11:05:25 [main] INFO  b.c.l.L.log.LoggingAspect - Método SquareRootCalculator.calculateSquareRoot(..) está prestes a ser executado. Parâmetros: [-1.0]
2023-11-25 11:05:25 [main] ERROR b.c.l.LogInFileJava.AppRunner - Exceção: Não é possível calcular a raiz quadrada de um número negativo.
2023-11-25 11:05:25 [main] INFO  b.c.l.L.log.LoggingAspect - Método AppRunner.run(..) retornou: null
{"@timestamp":"2023-11-25T11:06:38.320-03:00","@version":"1","message":"Starting LogInFileJavaApplication using Java 17.0.9 with PID 8992 (/Users/leandronazareth/Documents/PROJECT/LogInFileJava/target/classes started by leandronazareth in /Users/leandronazareth/Documents/PROJECT/LogInFileJava)","logger_name":"br.com.leandronazareth.LogInFileJava.LogInFileJavaApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2023-11-25T11:06:38.325-03:00","@version":"1","message":"No active profile set, falling back to 1 default profile: \"default\"","logger_name":"br.com.leandronazareth.LogInFileJava.LogInFileJavaApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2023-11-25T11:06:38.701-03:00","@version":"1","message":"Started LogInFileJavaApplication in 0.495 seconds (process running for 0.754)","logger_name":"br.com.leandronazareth.LogInFileJava.LogInFileJavaApplication","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2023-11-25T11:06:38.703-03:00","@version":"1","message":"Método AppRunner.run(..) está prestes a ser executado. Parâmetros: [[Ljava.lang.String;@d74bac4]","logger_name":"br.com.leandronazareth.LogInFileJava.log.LoggingAspect","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2023-11-25T11:06:38.703-03:00","@version":"1","message":"Método SquareRootCalculator.calculateSquareRoot(..) está prestes a ser executado. Parâmetros: [25.0]","logger_name":"br.com.leandronazareth.LogInFileJava.log.LoggingAspect","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2023-11-25T11:06:38.703-03:00","@version":"1","message":"Método SquareRootCalculator.calculateSquareRoot(..) retornou: 5.0","logger_name":"br.com.leandronazareth.LogInFileJava.log.LoggingAspect","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2023-11-25T11:06:38.703-03:00","@version":"1","message":"Resultado: 5.0","logger_name":"br.com.leandronazareth.LogInFileJava.AppRunner","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2023-11-25T11:06:38.704-03:00","@version":"1","message":"Método SquareRootCalculator.calculateSquareRoot(..) está prestes a ser executado. Parâmetros: [-1.0]","logger_name":"br.com.leandronazareth.LogInFileJava.log.LoggingAspect","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2023-11-25T11:06:38.704-03:00","@version":"1","message":"Exceção: Não é possível calcular a raiz quadrada de um número negativo.","logger_name":"br.com.leandronazareth.LogInFileJava.AppRunner","thread_name":"main","level":"ERROR","level_value":40000}
{"@timestamp":"2023-11-25T11:06:38.704-03:00","@version":"1","message":"Método AppRunner.run(..) retornou: null","logger_name":"br.com.leandronazareth.LogInFileJava.log.LoggingAspect","thread_name":"main","level":"INFO","level_value":20000}
